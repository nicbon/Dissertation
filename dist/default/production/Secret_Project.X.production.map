Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.41\dat\en_msgs.txt -cs \
  -h+dist/default/production\Secret_Project.X.production.sym \
  --cmf=dist/default/production\Secret_Project.X.production.cmf -z \
  -Q16LF1937 -oC:\Users\Nicku\AppData\Local\Temp\s8lo.2 \
  -Mdist/default/production/Secret_Project.X.production.map -E1 -ver=XC8 \
  -ASTACK=02090h-021efh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABANK3=01A0h-01EFh \
  -ABANK4=0220h-026Fh -ABANK5=02A0h-02EFh -ABANK6=0320h-032Fh \
  -ABIGRAM=02000h-021EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-032Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-032Fh \
  -ASFR0=00h-01Fh -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-019Fh \
  -ASFR4=0200h-021Fh -ASFR5=0280h-029Fh -ASFR6=0300h-031Fh \
  -ASFR7=0380h-03EFh -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh \
  -ASFR10=0500h-056Fh -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh \
  -ASFR13=0680h-06EFh -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh \
  -ASFR16=0800h-086Fh -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh \
  -ASFR19=0980h-09EFh -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh \
  -ASFR22=0B00h-0B6Fh -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh \
  -ASFR25=0C80h-0CEFh -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh \
  -ASFR28=0E00h-0E6Fh -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh \
  -ASFR31=0F80h-0FEFh -preset_vec=00h,intentry,init,end_init -ppowerup=CODE \
  -pcinit=CODE -pfunctab=CODE -ACONFIG=08007h-08008h -pconfig=CONFIG \
  -DCONFIG=2 -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 \
  -AEEDATA=00h-0FFh/0F000h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Nicku\AppData\Local\Temp\s8lo.obj \
  dist/default/production\Secret_Project.X.production.obj 

Object code version is 3.11

Machine type is 16LF1937



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Nicku\AppData\Local\Temp\s8lo.obj
                end_init                              2        2        2        0       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\Secret_Project.X.production.obj
                cinit                               7ED      7ED       13      FDA       0
                text7                               663      663       51      CC6       0
                text6                               5D9      5D9       45      BB2       0
                text5                               705      705       57      E0A       0
                text4                               6B4      6B4       51      D68       0
                text3                               61E      61E       45      C3C       0
                text2                               75C      75C       91      EB8       0
                text1                               51C      51C       3D      A38       0
                maintext                            559      559       40      AB2       0
                cstackBANK0                          20       20        F       20       1
                cstackCOMMON                         70       70        E       70       1
                inittext                            516      516        6      A2C       0
                dataBANK1                            A0       A0       40       A0       1
                bssBANK0                             2F       2F        5       20       1
                stringtext                          800      800        3     1000       0
                idataBANK1                          599      599       40      B32       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              2        2        2         0
                cinit                               7ED      7ED       13         0
                reset_vec                             0        0        2         0
                text7                               663      663       51         0
                text6                               5D9      5D9       45         0
                text5                               705      705       57         0
                text4                               6B4      6B4       51         0
                text3                               61E      61E       45         0
                text2                               75C      75C       91         0
                text1                               51C      51C       3D         0
                maintext                            559      559       40         0
                inittext                            516      516        6         0
                idataBANK1                          599      599       40         0

        CLASS   STRCODE        
                stringtext                          800      800        3         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20        F         1
                bssBANK0                             2F       2F        5         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       40         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000004  000004         0       0  CODE        2
                cstackBANK0                    000020  000014  000034        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                dataBANK1                      0000A0  000040  0000E0        A0       1  BANK1       1
                inittext                       000516  000006  00051C       A2C       0  CODE        2
                text1                          00051C  00003D  000559       A38       0  CODE        2
                maintext                       000559  000040  000599       AB2       0  CODE        2
                idataBANK1                     000599  000040  0005D9       B32       0  CODE        2
                text6                          0005D9  000045  00061E       BB2       0  CODE        2
                text3                          00061E  000045  000663       C3C       0  CODE        2
                text7                          000663  000051  0006B4       CC6       0  CODE        2
                text4                          0006B4  000051  000705       D68       0  CODE        2
                text5                          000705  000057  00075C       E0A       0  CODE        2
                text2                          00075C  000091  0007ED       EB8       0  CODE        2
                cinit                          0007ED  000013  000800       FDA       0  CODE        2
                stringtext                     000800  000003  000803      1000       0  STRCODE     2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00034-0006F              3C           1
        BANK1            000E0-000EF              10           1
        BANK2            00120-0016F              50           1
        BANK3            001A0-001EF              50           1
        BANK4            00220-0026F              50           1
        BANK5            002A0-002EF              50           1
        BANK6            00320-0032F              10           1
        BIGRAM           02000-021EF             1F0           1
        CODE             00004-00515             512           2
                         00803-01FFF             800
        CONST            00004-00515             100           2
                         00803-01FFF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00004-00515             100           2
                         00803-01FFF             100
        IDLOC            08000-08003               4           2
        RAM              00034-0006F              3C           1
                         000E0-000EF              10
                         00120-0016F              50
                         001A0-001EF              50
                         00220-0026F              50
                         002A0-002EF              50
                         00320-0032F              10
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-0019F              20           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0021F              20           1
        SFR5             00280-0029F              20           1
        SFR6             00300-0031F              20           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02090-021EF             160           1
        STRCODE          00004-00515             512           2
                         00803-01FFF            17FD
        STRING           00004-00515             100           2
                         00803-01FFF             100

                                  Symbol Table

?___awdiv                cstackCOMMON 00070
?___awmod                cstackCOMMON 00070
LCDBusyLoop@busy         cstackCOMMON 00072
LCDBusyLoop@status       cstackCOMMON 00074
LCDBusyLoop@temp         cstackCOMMON 00073
LCDByte@c                cstackCOMMON 0007A
LCDByte@hn               cstackCOMMON 00078
LCDByte@isdata           cstackCOMMON 00075
LCDByte@ln               cstackCOMMON 00079
LCDByte@temp             cstackCOMMON 0007B
LCDInit@__i              cstackBANK0  00021
LCDInit@style            cstackBANK0  00020
LCDWriteInt@F3575        bssBANK0     0002F
LCDWriteInt@field_length cstackBANK0  00022
LCDWriteInt@i            cstackBANK0  0002A
LCDWriteInt@j            cstackBANK0  00028
LCDWriteInt@str          cstackBANK0  00023
LCDWriteInt@val          cstackBANK0  00020
LCDWriteString@cc        cstackBANK0  00021
LCDWriteString@msg       cstackCOMMON 0007C
_ADCON0                  (abs)        0009D
_ADCON1                  (abs)        0009E
_ADRESH                  (abs)        0009C
_ANSELA                  (abs)        0018C
_LCDBusyLoop             text7        00663
_LCDByte                 text6        005D9
_LCDInit                 text5        00705
_LCDWriteInt             text2        0075C
_LCDWriteString          text1        0051C
_OSCCON                  (abs)        00099
_PORTC                   (abs)        0000E
_RC4                     (abs)        00074
_RC5                     (abs)        00075
_RC6                     (abs)        00076
_TRISA                   (abs)        0008C
_TRISC                   (abs)        0008E
_TRISCbits               (abs)        0008E
__CFG_BOREN$ON           (abs)        00000
__CFG_CP$OFF             (abs)        00000
__CFG_CPD$OFF            (abs)        00000
__CFG_FOSC$INTOSC        (abs)        00000
__CFG_LVP$ON             (abs)        00000
__CFG_PWRTE$OFF          (abs)        00000
__CFG_WDTE$OFF           (abs)        00000
__CFG_WRT$OFF            (abs)        00000
__Habs1                  abs1         00000
__Hbank0                 bank0        00000
__Hbank1                 bank1        00000
__Hbank10                bank10       00000
__Hbank11                bank11       00000
__Hbank12                bank12       00000
__Hbank13                bank13       00000
__Hbank14                bank14       00000
__Hbank15                bank15       00000
__Hbank16                bank16       00000
__Hbank17                bank17       00000
__Hbank18                bank18       00000
__Hbank19                bank19       00000
__Hbank2                 bank2        00000
__Hbank20                bank20       00000
__Hbank21                bank21       00000
__Hbank22                bank22       00000
__Hbank23                bank23       00000
__Hbank24                bank24       00000
__Hbank25                bank25       00000
__Hbank26                bank26       00000
__Hbank27                bank27       00000
__Hbank28                bank28       00000
__Hbank29                bank29       00000
__Hbank3                 bank3        00000
__Hbank30                bank30       00000
__Hbank31                bank31       00000
__Hbank4                 bank4        00000
__Hbank5                 bank5        00000
__Hbank6                 bank6        00000
__Hbank7                 bank7        00000
__Hbank8                 bank8        00000
__Hbank9                 bank9        00000
__Hbigram                bigram       00000
__HbssBANK0              bssBANK0     00000
__Hcinit                 cinit        00800
__Hclrtext               clrtext      00000
__Hcode                  code         00000
__Hcommon                common       00000
__Hconfig                config       08009
__HcstackBANK0           cstackBANK0  00000
__HcstackCOMMON          cstackCOMMON 00000
__HdataBANK1             dataBANK1    00000
__Heeprom_data           eeprom_data  00000
__Hend_init              end_init     00004
__Hfunctab               functab      00000
__HidataBANK1            idataBANK1   00000
__Hidloc                 idloc        00000
__Hinit                  init         00002
__Hinittext              inittext     00000
__Hintentry              intentry     00002
__Hmaintext              maintext     00000
__Hpowerup               powerup      00000
__Hram                   ram          00000
__Hreset_vec             reset_vec    00002
__Hsfr0                  sfr0         00000
__Hsfr1                  sfr1         00000
__Hsfr10                 sfr10        00000
__Hsfr11                 sfr11        00000
__Hsfr12                 sfr12        00000
__Hsfr13                 sfr13        00000
__Hsfr14                 sfr14        00000
__Hsfr15                 sfr15        00000
__Hsfr16                 sfr16        00000
__Hsfr17                 sfr17        00000
__Hsfr18                 sfr18        00000
__Hsfr19                 sfr19        00000
__Hsfr2                  sfr2         00000
__Hsfr20                 sfr20        00000
__Hsfr21                 sfr21        00000
__Hsfr22                 sfr22        00000
__Hsfr23                 sfr23        00000
__Hsfr24                 sfr24        00000
__Hsfr25                 sfr25        00000
__Hsfr26                 sfr26        00000
__Hsfr27                 sfr27        00000
__Hsfr28                 sfr28        00000
__Hsfr29                 sfr29        00000
__Hsfr3                  sfr3         00000
__Hsfr30                 sfr30        00000
__Hsfr31                 sfr31        00000
__Hsfr4                  sfr4         00000
__Hsfr5                  sfr5         00000
__Hsfr6                  sfr6         00000
__Hsfr7                  sfr7         00000
__Hsfr8                  sfr8         00000
__Hsfr9                  sfr9         00000
__Hspace_0               (abs)        08009
__Hspace_1               (abs)        000E0
__Hspace_2               (abs)        00000
__Hspace_3               (abs)        00000
__Hstack                 stack        00000
__Hstrings               strings      00000
__Hstringtext            stringtext   00000
__Htext                  text         00000
__Labs1                  abs1         00000
__Lbank0                 bank0        00000
__Lbank1                 bank1        00000
__Lbank10                bank10       00000
__Lbank11                bank11       00000
__Lbank12                bank12       00000
__Lbank13                bank13       00000
__Lbank14                bank14       00000
__Lbank15                bank15       00000
__Lbank16                bank16       00000
__Lbank17                bank17       00000
__Lbank18                bank18       00000
__Lbank19                bank19       00000
__Lbank2                 bank2        00000
__Lbank20                bank20       00000
__Lbank21                bank21       00000
__Lbank22                bank22       00000
__Lbank23                bank23       00000
__Lbank24                bank24       00000
__Lbank25                bank25       00000
__Lbank26                bank26       00000
__Lbank27                bank27       00000
__Lbank28                bank28       00000
__Lbank29                bank29       00000
__Lbank3                 bank3        00000
__Lbank30                bank30       00000
__Lbank31                bank31       00000
__Lbank4                 bank4        00000
__Lbank5                 bank5        00000
__Lbank6                 bank6        00000
__Lbank7                 bank7        00000
__Lbank8                 bank8        00000
__Lbank9                 bank9        00000
__Lbigram                bigram       00000
__LbssBANK0              bssBANK0     00000
__Lcinit                 cinit        007ED
__Lclrtext               clrtext      00000
__Lcode                  code         00000
__Lcommon                common       00000
__Lconfig                config       08007
__LcstackBANK0           cstackBANK0  00000
__LcstackCOMMON          cstackCOMMON 00000
__LdataBANK1             dataBANK1    00000
__Leeprom_data           eeprom_data  00000
__Lend_init              end_init     00002
__Lfunctab               functab      00000
__LidataBANK1            idataBANK1   00000
__Lidloc                 idloc        00000
__Linit                  init         00002
__Linittext              inittext     00000
__Lintentry              intentry     00002
__Lmaintext              maintext     00000
__Lpowerup               powerup      00000
__Lram                   ram          00000
__Lreset_vec             reset_vec    00000
__Lsfr0                  sfr0         00000
__Lsfr1                  sfr1         00000
__Lsfr10                 sfr10        00000
__Lsfr11                 sfr11        00000
__Lsfr12                 sfr12        00000
__Lsfr13                 sfr13        00000
__Lsfr14                 sfr14        00000
__Lsfr15                 sfr15        00000
__Lsfr16                 sfr16        00000
__Lsfr17                 sfr17        00000
__Lsfr18                 sfr18        00000
__Lsfr19                 sfr19        00000
__Lsfr2                  sfr2         00000
__Lsfr20                 sfr20        00000
__Lsfr21                 sfr21        00000
__Lsfr22                 sfr22        00000
__Lsfr23                 sfr23        00000
__Lsfr24                 sfr24        00000
__Lsfr25                 sfr25        00000
__Lsfr26                 sfr26        00000
__Lsfr27                 sfr27        00000
__Lsfr28                 sfr28        00000
__Lsfr29                 sfr29        00000
__Lsfr3                  sfr3         00000
__Lsfr30                 sfr30        00000
__Lsfr31                 sfr31        00000
__Lsfr4                  sfr4         00000
__Lsfr5                  sfr5         00000
__Lsfr6                  sfr6         00000
__Lsfr7                  sfr7         00000
__Lsfr8                  sfr8         00000
__Lsfr9                  sfr9         00000
__Lspace_0               (abs)        00000
__Lspace_1               (abs)        00000
__Lspace_2               (abs)        00000
__Lspace_3               (abs)        00000
__Lstack                 stack        00000
__Lstrings               strings      00000
__Lstringtext            stringtext   00000
__Ltext                  text         00000
__S0                     (abs)        08009
__S1                     (abs)        000E0
__S2                     (abs)        00000
__S3                     (abs)        00000
___awdiv                 text4        006B4
___awdiv@counter         cstackCOMMON 00075
___awdiv@dividend        cstackCOMMON 00072
___awdiv@divisor         cstackCOMMON 00070
___awdiv@quotient        cstackCOMMON 00077
___awdiv@sign            cstackCOMMON 00076
___awmod                 text3        0061E
___awmod@counter         cstackCOMMON 00075
___awmod@dividend        cstackCOMMON 00072
___awmod@divisor         cstackCOMMON 00070
___awmod@sign            cstackCOMMON 00076
___cgram                 dataBANK1    000A0
___int_sp                stack        00000
___latbits               (abs)        00002
___sp                    stack        00000
__end_of_LCDBusyLoop     text7        006B4
__end_of_LCDByte         text6        0061E
__end_of_LCDInit         text5        0075C
__end_of_LCDWriteInt     text2        007ED
__end_of_LCDWriteString  text1        00559
__end_of___awdiv         text4        00705
__end_of___awmod         text3        00663
__end_of__initialization cinit        007FD
__end_of_main            maintext     00599
__initialization         cinit        007ED
__pbssBANK0              bssBANK0     0002F
__pcstackBANK0           cstackBANK0  00020
__pcstackCOMMON          cstackCOMMON 00070
__pdataBANK1             dataBANK1    000A0
__pidataBANK1            idataBANK1   00599
__pmaintext              maintext     00559
__pstringtext            stringtext   00800
__ptext1                 text1        0051C
__ptext2                 text2        0075C
__ptext3                 text3        0061E
__ptext4                 text4        006B4
__ptext5                 text5        00705
__ptext6                 text6        005D9
__ptext7                 text7        00663
__size_of_LCDBusyLoop    (abs)        00000
__size_of_LCDByte        (abs)        00000
__size_of_LCDInit        (abs)        00000
__size_of_LCDWriteInt    (abs)        00000
__size_of_LCDWriteString (abs)        00000
__size_of___awdiv        (abs)        00000
__size_of___awmod        (abs)        00000
__size_of_main           (abs)        00000
_main                    maintext     00559
btemp                    (abs)        0007E
end_of_initialization    cinit        007FD
init_ram                 inittext     00516
intlevel0                functab      00000
intlevel1                functab      00000
intlevel2                functab      00000
intlevel3                functab      00000
intlevel4                functab      00000
intlevel5                functab      00000
reset_vec                reset_vec    00000
stackhi                  (abs)        021EF
stacklo                  (abs)        02090
start                    init         00002
start_initialization     cinit        007ED
wtemp0                   (abs)        0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 42 in file "LCD_Test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_LCDByte
		_LCDInit
		_LCDWriteInt
		_LCDWriteString
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 252 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  msg             2   12[COMMON] PTR const unsigned char 
		 -> STR_1(3), 
 Auto vars:     Size  Location     Type
  cc              1    1[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         2       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0
      Totals:         2       2       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDWriteInt *****************
 Defined at:
		line 308 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  val             2    0[BANK0 ] int 
  field_length    1    2[BANK0 ] char 
 Auto vars:     Size  Location     Type
  str             5    3[BANK0 ] unsigned char [5]
  i               2   10[BANK0 ] int 
  j               2    8[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       3       0       0       0       0       0       0
      Locals:         0       9       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         2      12       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCDByte
		___awdiv
		___awmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         4       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDWriteInt
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] int 
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         4       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDWriteInt
 This function uses a non-reentrant model


 *************** function _LCDInit *****************
 Defined at:
		line 194 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1    0[BANK0 ] unsigned char 
  __i             1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         2       2       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCDBusyLoop
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDByte *****************
 Defined at:
		line 81 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[COMMON] unsigned char 
  temp            1   11[COMMON] unsigned char 
  ln              1    9[COMMON] unsigned char 
  hn              1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         1       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCDBusyLoop
 This function is called by:
		_LCDInit
		_LCDWriteString
		_LCDWriteInt
		_main
		_LCDGotoXY
 This function uses a non-reentrant model


 *************** function _LCDBusyLoop *****************
 Defined at:
		line 136 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[COMMON] unsigned char 
  temp            1    3[COMMON] unsigned char 
  busy            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
      Params:         0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDByte
		_LCDInit
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c
		___awdiv       		CODE           	06B4	0000	82

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c estimated size: 82

shared
		__initialization		CODE           	07ED	0000	17

shared estimated size: 17

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c
		___awmod       		CODE           	061E	0000	70

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c estimated size: 70

lcd_hd44780_pic16.c
		_LCDByte       		CODE           	05D9	0000	70
		_LCDWriteInt   		CODE           	075C	0000	146
		_LCDInit       		CODE           	0705	0000	88
		_LCDWriteString		CODE           	051C	0000	62
		_LCDBusyLoop   		CODE           	0663	0000	82

lcd_hd44780_pic16.c estimated size: 448

LCD_Test.c
		_main          		CODE           	0559	0000	65

LCD_Test.c estimated size: 65

