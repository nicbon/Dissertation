

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Feb 22 22:52:39 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16LF1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16LF1937 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0110                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018F                     	;# 
   126  0190                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020D                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029F                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0791                     	;# 
   201  0792                     	;# 
   202  0793                     	;# 
   203  0794                     	;# 
   204  0795                     	;# 
   205  0798                     	;# 
   206  0799                     	;# 
   207  079A                     	;# 
   208  07A0                     	;# 
   209  07A1                     	;# 
   210  07A2                     	;# 
   211  07A3                     	;# 
   212  07A4                     	;# 
   213  07A5                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A8                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  07AB                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0110                     	;# 
   286  0111                     	;# 
   287  0112                     	;# 
   288  0113                     	;# 
   289  0114                     	;# 
   290  0115                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  0118                     	;# 
   294  0119                     	;# 
   295  011A                     	;# 
   296  011B                     	;# 
   297  011D                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  018F                     	;# 
   301  0190                     	;# 
   302  0191                     	;# 
   303  0191                     	;# 
   304  0192                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020D                     	;# 
   323  0210                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  029B                     	;# 
   345  029C                     	;# 
   346  029C                     	;# 
   347  029D                     	;# 
   348  029E                     	;# 
   349  029F                     	;# 
   350  0311                     	;# 
   351  0311                     	;# 
   352  0312                     	;# 
   353  0313                     	;# 
   354  0314                     	;# 
   355  0315                     	;# 
   356  0315                     	;# 
   357  0316                     	;# 
   358  0318                     	;# 
   359  0318                     	;# 
   360  0319                     	;# 
   361  031A                     	;# 
   362  031C                     	;# 
   363  031C                     	;# 
   364  031D                     	;# 
   365  031E                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  0415                     	;# 
   370  0416                     	;# 
   371  0417                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  0791                     	;# 
   376  0792                     	;# 
   377  0793                     	;# 
   378  0794                     	;# 
   379  0795                     	;# 
   380  0798                     	;# 
   381  0799                     	;# 
   382  079A                     	;# 
   383  07A0                     	;# 
   384  07A1                     	;# 
   385  07A2                     	;# 
   386  07A3                     	;# 
   387  07A4                     	;# 
   388  07A5                     	;# 
   389  07A6                     	;# 
   390  07A7                     	;# 
   391  07A8                     	;# 
   392  07A9                     	;# 
   393  07AA                     	;# 
   394  07AB                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406                           
   407                           	psect	idataBANK1
   408  0599                     __pidataBANK1:	
   409                           
   410                           ;initializer for ___cgram
   411  0599  340C               	retlw	12
   412  059A  3412               	retlw	18
   413  059B  3412               	retlw	18
   414  059C  340C               	retlw	12
   415  059D  3400               	retlw	0
   416  059E  3400               	retlw	0
   417  059F  3400               	retlw	0
   418  05A0  3400               	retlw	0
   419  05A1  3400               	retlw	0
   420  05A2  3404               	retlw	4
   421  05A3  340E               	retlw	14
   422  05A4  341F               	retlw	31
   423  05A5  340E               	retlw	14
   424  05A6  3404               	retlw	4
   425  05A7  3400               	retlw	0
   426  05A8  3400               	retlw	0
   427  05A9  3404               	retlw	4
   428  05AA  3404               	retlw	4
   429  05AB  3404               	retlw	4
   430  05AC  3404               	retlw	4
   431  05AD  341F               	retlw	31
   432  05AE  340E               	retlw	14
   433  05AF  3404               	retlw	4
   434  05B0  3400               	retlw	0
   435  05B1  340A               	retlw	10
   436  05B2  3415               	retlw	21
   437  05B3  3411               	retlw	17
   438  05B4  340A               	retlw	10
   439  05B5  3404               	retlw	4
   440  05B6  3400               	retlw	0
   441  05B7  3400               	retlw	0
   442  05B8  3400               	retlw	0
   443  05B9  340A               	retlw	10
   444  05BA  341F               	retlw	31
   445  05BB  341F               	retlw	31
   446  05BC  340E               	retlw	14
   447  05BD  3404               	retlw	4
   448  05BE  3400               	retlw	0
   449  05BF  3400               	retlw	0
   450  05C0  3400               	retlw	0
   451  05C1  3400               	retlw	0
   452  05C2  3400               	retlw	0
   453  05C3  3400               	retlw	0
   454  05C4  3400               	retlw	0
   455  05C5  3400               	retlw	0
   456  05C6  3400               	retlw	0
   457  05C7  3400               	retlw	0
   458  05C8  3400               	retlw	0
   459  05C9  3400               	retlw	0
   460  05CA  3400               	retlw	0
   461  05CB  3400               	retlw	0
   462  05CC  3400               	retlw	0
   463  05CD  3400               	retlw	0
   464  05CE  3400               	retlw	0
   465  05CF  3400               	retlw	0
   466  05D0  3400               	retlw	0
   467  05D1  3400               	retlw	0
   468  05D2  3400               	retlw	0
   469  05D3  3400               	retlw	0
   470  05D4  3400               	retlw	0
   471  05D5  3400               	retlw	0
   472  05D6  3400               	retlw	0
   473  05D7  3400               	retlw	0
   474  05D8  3400               	retlw	0
   475  000E                     _PORTC	set	14
   476  0075                     _RC5	set	117
   477  0076                     _RC6	set	118
   478  0074                     _RC4	set	116
   479  009C                     _ADRESH	set	156
   480  009E                     _ADCON1	set	158
   481  009D                     _ADCON0	set	157
   482  008C                     _TRISA	set	140
   483  0099                     _OSCCON	set	153
   484  008E                     _TRISCbits	set	142
   485  008E                     _TRISC	set	142
   486  018C                     _ANSELA	set	396
   487                           
   488                           	psect	stringtext
   489  0800                     __pstringtext:	
   490  0800                     STR_1:	
   491  0800  3456               	retlw	86	;'V'
   492  0801  343D               	retlw	61	;'='
   493  0802  3400               	retlw	0
   494                           
   495                           ; #config settings
   496  0000                     
   497                           	psect	cinit
   498  07ED                     start_initialization:	
   499  07ED                     __initialization:	
   500                           
   501                           ; Initialize objects allocated to BANK1
   502  07ED  3099               	movlw	low __pidataBANK1
   503  07EE  0084               	movwf	4
   504  07EF  3085               	movlw	(high __pidataBANK1)| (0+128)
   505  07F0  0085               	movwf	5
   506  07F1  30A0               	movlw	low __pdataBANK1
   507  07F2  0086               	movwf	6
   508  07F3  3000               	movlw	high __pdataBANK1
   509  07F4  0087               	movwf	7
   510  07F5  3040               	movlw	64
   511  07F6  3185  2516         	fcall	init_ram
   512                           
   513                           ; Clear objects allocated to BANK0
   514  07F8  01AF               	clrf	__pbssBANK0& (0+127)
   515  07F9  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   516  07FA  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   517  07FB  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   518  07FC  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   519  07FD                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  07FD                     __end_of__initialization:	
   523  07FD  0020               	movlb	0
   524  07FE  3185  2D59         	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssBANK0
   527  002F                     __pbssBANK0:	
   528  002F                     LCDWriteInt@F3575:	
   529  002F                     	ds	5
   530                           
   531                           	psect	dataBANK1
   532  00A0                     __pdataBANK1:	
   533  00A0                     ___cgram:	
   534  00A0                     	ds	64
   535                           
   536                           	psect	inittext
   537  0516                     init_ram:	
   538  0516  00FE               	movwf	126
   539  0517                     initloop:	
   540  0517  0012               	moviw fsr0++
   541  0518  001E               	movwi fsr1++
   542  0519  0BFE               	decfsz	126,f
   543  051A  2D17               	goto	initloop
   544  051B  3400               	retlw	0
   545                           
   546                           	psect	cstackCOMMON
   547  0070                     __pcstackCOMMON:	
   548  0070                     ?_LCDBusyLoop:	
   549  0070                     ??_LCDBusyLoop:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_LCDInit:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?___awdiv:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?___awmod:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     ___awdiv@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___awmod@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570                           
   571                           ; 2 bytes @ 0x0
   572  0070                     	ds	2
   573  0072                     LCDBusyLoop@busy:	
   574  0072                     ___awdiv@dividend:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ___awmod@dividend:	
   578                           ; 2 bytes @ 0x2
   579                           
   580                           
   581                           ; 2 bytes @ 0x2
   582  0072                     	ds	1
   583  0073                     LCDBusyLoop@temp:	
   584                           
   585                           ; 1 bytes @ 0x3
   586  0073                     	ds	1
   587  0074                     ??___awdiv:	
   588  0074                     ??___awmod:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0074                     LCDBusyLoop@status:	
   592                           ; 1 bytes @ 0x4
   593                           
   594                           
   595                           ; 1 bytes @ 0x4
   596  0074                     	ds	1
   597  0075                     ?_LCDByte:	
   598  0075                     LCDByte@isdata:	
   599                           ; 1 bytes @ 0x5
   600                           
   601  0075                     ___awdiv@counter:	
   602                           ; 1 bytes @ 0x5
   603                           
   604  0075                     ___awmod@counter:	
   605                           ; 1 bytes @ 0x5
   606                           
   607                           
   608                           ; 1 bytes @ 0x5
   609  0075                     	ds	1
   610  0076                     ??_LCDByte:	
   611  0076                     ___awdiv@sign:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  0076                     ___awmod@sign:	
   615                           ; 1 bytes @ 0x6
   616                           
   617                           
   618                           ; 1 bytes @ 0x6
   619  0076                     	ds	1
   620  0077                     ___awdiv@quotient:	
   621                           
   622                           ; 2 bytes @ 0x7
   623  0077                     	ds	1
   624  0078                     LCDByte@hn:	
   625                           
   626                           ; 1 bytes @ 0x8
   627  0078                     	ds	1
   628  0079                     LCDByte@ln:	
   629                           
   630                           ; 1 bytes @ 0x9
   631  0079                     	ds	1
   632  007A                     LCDByte@c:	
   633                           
   634                           ; 1 bytes @ 0xA
   635  007A                     	ds	1
   636  007B                     LCDByte@temp:	
   637                           
   638                           ; 1 bytes @ 0xB
   639  007B                     	ds	1
   640  007C                     ??_LCDInit:	
   641  007C                     ?_LCDWriteString:	
   642                           ; 1 bytes @ 0xC
   643                           
   644  007C                     ??_LCDWriteInt:	
   645                           ; 1 bytes @ 0xC
   646                           
   647  007C                     LCDWriteString@msg:	
   648                           ; 1 bytes @ 0xC
   649                           
   650                           
   651                           ; 2 bytes @ 0xC
   652  007C                     	ds	2
   653                           
   654                           	psect	cstackBANK0
   655  0020                     __pcstackBANK0:	
   656  0020                     ??_LCDWriteString:	
   657  0020                     ?_LCDWriteInt:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0020                     LCDInit@style:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0020                     LCDWriteInt@val:	
   664                           ; 1 bytes @ 0x0
   665                           
   666                           
   667                           ; 2 bytes @ 0x0
   668  0020                     	ds	1
   669  0021                     LCDInit@__i:	
   670  0021                     LCDWriteString@cc:	
   671                           ; 1 bytes @ 0x1
   672                           
   673                           
   674                           ; 1 bytes @ 0x1
   675  0021                     	ds	1
   676  0022                     LCDWriteInt@field_length:	
   677                           
   678                           ; 1 bytes @ 0x2
   679  0022                     	ds	1
   680  0023                     LCDWriteInt@str:	
   681                           
   682                           ; 5 bytes @ 0x3
   683  0023                     	ds	5
   684  0028                     LCDWriteInt@j:	
   685                           
   686                           ; 2 bytes @ 0x8
   687  0028                     	ds	2
   688  002A                     LCDWriteInt@i:	
   689                           
   690                           ; 2 bytes @ 0xA
   691  002A                     	ds	2
   692  002C                     ??_main:	
   693                           
   694                           ; 1 bytes @ 0xC
   695  002C                     	ds	3
   696                           
   697                           	psect	maintext
   698  0559                     __pmaintext:	
   699 ;;
   700 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   701 ;;
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 42 in file "LCD_Test.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : B1F/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   718 ;;      Params:         0       0       0       0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0
   720 ;;      Temps:          0       3       0       0       0       0       0       0
   721 ;;      Totals:         0       3       0       0       0       0       0       0
   722 ;;Total ram usage:        3 bytes
   723 ;; Hardware stack levels required when called:    3
   724 ;; This function calls:
   725 ;;		_LCDByte
   726 ;;		_LCDInit
   727 ;;		_LCDWriteInt
   728 ;;		_LCDWriteString
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _main
   736  0559                     _main:	
   737                           
   738                           ;LCD_Test.c: 44: OSCCON=0b01110000;
   739                           
   740                           ;incstack = 0
   741                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   742  0559  3070               	movlw	112
   743  055A  0021               	movlb	1	; select bank1
   744  055B  0099               	movwf	25	;volatile
   745                           
   746                           ;LCD_Test.c: 45: TRISA|=0b00000001;
   747  055C  140C               	bsf	12,0	;volatile
   748                           
   749                           ;LCD_Test.c: 46: ANSELA|=0b00000001;
   750  055D  0023               	movlb	3	; select bank3
   751  055E  140C               	bsf	12,0	;volatile
   752                           
   753                           ;LCD_Test.c: 47: ADCON0|=0b00000011;
   754  055F  3003               	movlw	3
   755  0560  0020               	movlb	0	; select bank0
   756  0561  00AC               	movwf	??_main
   757  0562  082C               	movf	??_main,w
   758  0563  0021               	movlb	1	; select bank1
   759  0564  049D               	iorwf	29,f	;volatile
   760                           
   761                           ;LCD_Test.c: 48: ADCON1|=0b00000000;
   762  0565  081E               	movf	30,w	;volatile
   763                           
   764                           ;LCD_Test.c: 50: LCDInit(0B00000000);
   765  0566  3000               	movlw	0
   766  0567  3187  2705  3185   	fcall	_LCDInit
   767  056A                     l1170:	
   768                           ;LCD_Test.c: 58: while(1)
   769                           
   770                           
   771                           ;LCD_Test.c: 59: { (LCDByte(0b00000001,0));
   772  056A  01F5               	clrf	LCDByte@isdata
   773  056B  3001               	movlw	1
   774  056C  3185  25D9  3185   	fcall	_LCDByte
   775                           
   776                           ;LCD_Test.c: 60: LCDWriteString("V=");
   777  056F  3000               	movlw	low (STR_1| (0+32768))
   778  0570  00FC               	movwf	LCDWriteString@msg
   779  0571  3088               	movlw	high (STR_1| (0+32768))
   780  0572  00FD               	movwf	LCDWriteString@msg+1
   781  0573  3185  251C  3185   	fcall	_LCDWriteString
   782                           
   783                           ;LCD_Test.c: 63: LCDWriteInt(ADRESH,4);
   784                           
   785                           ;LCD_Test.c: 61: while(ADCON0&0b00000010==0);
   786  0576  0021               	movlb	1	; select bank1
   787  0577  081C               	movf	28,w	;volatile
   788  0578  0020               	movlb	0	; select bank0
   789  0579  00AC               	movwf	??_main
   790  057A  01AD               	clrf	??_main+1
   791  057B  082C               	movf	??_main,w
   792  057C  00A0               	movwf	LCDWriteInt@val
   793  057D  082D               	movf	??_main+1,w
   794  057E  00A1               	movwf	LCDWriteInt@val+1
   795  057F  3004               	movlw	4
   796  0580  00AE               	movwf	??_main+2
   797  0581  082E               	movf	??_main+2,w
   798  0582  00A2               	movwf	LCDWriteInt@field_length
   799  0583  3187  275C  3185   	fcall	_LCDWriteInt
   800                           
   801                           ;LCD_Test.c: 64: ADCON0|=0b00000011;
   802  0586  3003               	movlw	3
   803  0587  0020               	movlb	0	; select bank0
   804  0588  00AC               	movwf	??_main
   805  0589  082C               	movf	??_main,w
   806  058A  0021               	movlb	1	; select bank1
   807  058B  049D               	iorwf	29,f	;volatile
   808                           
   809                           ;LCD_Test.c: 65: _delay((unsigned long)((1000)*(32000000/4000.0)));
   810  058C  3029               	movlw	41
   811  058D  0020               	movlb	0	; select bank0
   812  058E  00AD               	movwf	??_main+1
   813  058F  3096               	movlw	150
   814  0590  00AC               	movwf	??_main
   815  0591  307F               	movlw	127
   816  0592                     u757:	
   817  0592  0B89               	decfsz	9,f
   818  0593  2D92               	goto	u757
   819  0594  0BAC               	decfsz	??_main,f
   820  0595  2D92               	goto	u757
   821  0596  0BAD               	decfsz	??_main+1,f
   822  0597  2D92               	goto	u757
   823  0598  2D6A               	goto	l1170
   824  0599                     __end_of_main:	
   825                           
   826                           	psect	text1
   827  051C                     __ptext1:	
   828 ;; *************** function _LCDWriteString *****************
   829 ;; Defined at:
   830 ;;		line 252 in file "lcd_hd44780_pic16.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  msg             2   12[COMMON] PTR const unsigned char 
   833 ;;		 -> STR_1(3), 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  cc              1    1[BANK0 ] char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   845 ;;      Params:         2       0       0       0       0       0       0       0
   846 ;;      Locals:         0       1       0       0       0       0       0       0
   847 ;;      Temps:          0       1       0       0       0       0       0       0
   848 ;;      Totals:         2       2       0       0       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    2
   852 ;; This function calls:
   853 ;;		_LCDByte
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _LCDWriteString
   861  051C                     _LCDWriteString:	
   862  051C                     l1100:	
   863                           ;lcd_hd44780_pic16.c: 282: while(*msg!='\0')
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   867                           
   868  051C  087C               	movf	LCDWriteString@msg,w
   869  051D  0084               	movwf	4
   870  051E  087D               	movf	LCDWriteString@msg+1,w
   871  051F  0085               	movwf	5
   872  0520  0012               	moviw fsr0++
   873  0521  1903               	btfsc	3,2
   874  0522  0008               	return
   875                           
   876                           ;lcd_hd44780_pic16.c: 283: {
   877                           ;lcd_hd44780_pic16.c: 285: if(*msg=='%')
   878  0523  087C               	movf	LCDWriteString@msg,w
   879  0524  0084               	movwf	4
   880  0525  087D               	movf	LCDWriteString@msg+1,w
   881  0526  0085               	movwf	5
   882  0527  0012               	moviw fsr0++
   883  0528  3A25               	xorlw	37
   884  0529  1D03               	btfss	3,2
   885  052A  2D4A               	goto	l1096
   886                           
   887                           ;lcd_hd44780_pic16.c: 286: {
   888                           ;lcd_hd44780_pic16.c: 287: msg++;
   889  052B  3001               	movlw	1
   890  052C  07FC               	addwf	LCDWriteString@msg,f
   891  052D  3000               	movlw	0
   892  052E  3DFD               	addwfc	LCDWriteString@msg+1,f
   893                           
   894                           ;lcd_hd44780_pic16.c: 288: int8_t cc=*msg-'0';
   895  052F  087C               	movf	LCDWriteString@msg,w
   896  0530  0084               	movwf	4
   897  0531  087D               	movf	LCDWriteString@msg+1,w
   898  0532  0085               	movwf	5
   899  0533  0800               	movf	0,w	;code access
   900  0534  3ED0               	addlw	-48
   901  0535  0020               	movlb	0	; select bank0
   902  0536  00A0               	movwf	??_LCDWriteString
   903  0537  0820               	movf	??_LCDWriteString,w
   904  0538  00A1               	movwf	LCDWriteString@cc
   905                           
   906                           ;lcd_hd44780_pic16.c: 290: if(cc>=0 && cc<=7)
   907  0539  1BA1               	btfsc	LCDWriteString@cc,7
   908  053A  2D44               	goto	l1092
   909  053B  0821               	movf	LCDWriteString@cc,w
   910  053C  3A80               	xorlw	128
   911  053D  3E78               	addlw	-136
   912  053E  1803               	skipnc
   913  053F  2D44               	goto	l1092
   914                           
   915                           ;lcd_hd44780_pic16.c: 291: {
   916                           ;lcd_hd44780_pic16.c: 292: (LCDByte(cc,1));
   917  0540  01F5               	clrf	LCDByte@isdata
   918  0541  0AF5               	incf	LCDByte@isdata,f
   919  0542  0821               	movf	LCDWriteString@cc,w
   920  0543  2D51               	goto	L1
   921  0544                     l1092:	
   922                           ;lcd_hd44780_pic16.c: 293: }
   923                           
   924                           
   925                           ;lcd_hd44780_pic16.c: 294: else
   926                           ;lcd_hd44780_pic16.c: 295: {
   927                           ;lcd_hd44780_pic16.c: 296: (LCDByte('%',1));
   928  0544  01F5               	clrf	LCDByte@isdata
   929  0545  0AF5               	incf	LCDByte@isdata,f
   930  0546  3025               	movlw	37
   931  0547  3185  25D9  3185   	fcall	_LCDByte
   932  054A                     l1096:	
   933                           ;lcd_hd44780_pic16.c: 298: }
   934                           ;lcd_hd44780_pic16.c: 299: }
   935                           
   936                           ;lcd_hd44780_pic16.c: 297: (LCDByte(*msg,1));
   937                           
   938                           
   939                           ;lcd_hd44780_pic16.c: 300: else
   940                           ;lcd_hd44780_pic16.c: 301: {
   941                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
   942  054A  01F5               	clrf	LCDByte@isdata
   943  054B  0AF5               	incf	LCDByte@isdata,f
   944  054C  087C               	movf	LCDWriteString@msg,w
   945  054D  0084               	movwf	4
   946  054E  087D               	movf	LCDWriteString@msg+1,w
   947  054F  0085               	movwf	5
   948  0550  0800               	movf	0,w	;code access
   949  0551                     L1:	
   950  0551  3185  25D9  3185   	fcall	_LCDByte
   951                           
   952                           ;lcd_hd44780_pic16.c: 303: }
   953                           ;lcd_hd44780_pic16.c: 304: msg++;
   954  0554  3001               	movlw	1
   955  0555  07FC               	addwf	LCDWriteString@msg,f
   956  0556  3000               	movlw	0
   957  0557  3DFD               	addwfc	LCDWriteString@msg+1,f
   958  0558  2D1C               	goto	l1100
   959  0559                     __end_of_LCDWriteString:	
   960                           
   961                           	psect	text2
   962  075C                     __ptext2:	
   963 ;; *************** function _LCDWriteInt *****************
   964 ;; Defined at:
   965 ;;		line 308 in file "lcd_hd44780_pic16.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  val             2    0[BANK0 ] int 
   968 ;;  field_length    1    2[BANK0 ] char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  str             5    3[BANK0 ] unsigned char [5]
   971 ;;  i               2   10[BANK0 ] int 
   972 ;;  j               2    8[BANK0 ] int 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   982 ;;      Params:         0       3       0       0       0       0       0       0
   983 ;;      Locals:         0       9       0       0       0       0       0       0
   984 ;;      Temps:          2       0       0       0       0       0       0       0
   985 ;;      Totals:         2      12       0       0       0       0       0       0
   986 ;;Total ram usage:       14 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    2
   989 ;; This function calls:
   990 ;;		_LCDByte
   991 ;;		___awdiv
   992 ;;		___awmod
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _LCDWriteInt
  1000  075C                     _LCDWriteInt:	
  1001                           
  1002                           ;lcd_hd44780_pic16.c: 321: char str[5]={0,0,0,0,0};
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1006  075C  302F               	movlw	low LCDWriteInt@F3575
  1007  075D  0086               	movwf	6
  1008  075E  3000               	movlw	high LCDWriteInt@F3575
  1009  075F  0087               	movwf	7
  1010  0760  3023               	movlw	low LCDWriteInt@str
  1011  0761  0084               	movwf	4
  1012  0762  3000               	movlw	high LCDWriteInt@str
  1013  0763  0085               	movwf	5
  1014  0764  3005               	movlw	5
  1015  0765  00FC               	movwf	??_LCDWriteInt
  1016  0766                     u670:	
  1017  0766  0016               	moviw fsr1++
  1018  0767  001A               	movwi fsr0++
  1019  0768  0BFC               	decfsz	??_LCDWriteInt,f
  1020  0769  2F66               	goto	u670
  1021                           
  1022                           ;lcd_hd44780_pic16.c: 322: int i=4,j=0;
  1023  076A  3004               	movlw	4
  1024  076B  0020               	movlb	0	; select bank0
  1025  076C  00AA               	movwf	LCDWriteInt@i
  1026  076D  3000               	movlw	0
  1027  076E  00AB               	movwf	LCDWriteInt@i+1
  1028  076F  01A8               	clrf	LCDWriteInt@j
  1029  0770  01A9               	clrf	LCDWriteInt@j+1
  1030                           
  1031                           ;lcd_hd44780_pic16.c: 325: if(val<0)
  1032  0771  1FA1               	btfss	LCDWriteInt@val+1,7
  1033  0772  2F7F               	goto	l1120
  1034                           
  1035                           ;lcd_hd44780_pic16.c: 326: {
  1036                           ;lcd_hd44780_pic16.c: 327: (LCDByte('-',1));
  1037  0773  01F5               	clrf	LCDByte@isdata
  1038  0774  0AF5               	incf	LCDByte@isdata,f
  1039  0775  302D               	movlw	45
  1040  0776  3185  25D9  3187   	fcall	_LCDByte
  1041                           
  1042                           ;lcd_hd44780_pic16.c: 328: val=val*-1;
  1043  0779  0020               	movlb	0	; select bank0
  1044  077A  09A0               	comf	LCDWriteInt@val,f
  1045  077B  09A1               	comf	LCDWriteInt@val+1,f
  1046  077C  0AA0               	incf	LCDWriteInt@val,f
  1047  077D  1903               	skipnz
  1048  077E  0AA1               	incf	LCDWriteInt@val+1,f
  1049  077F                     l1120:	
  1050                           ;lcd_hd44780_pic16.c: 329: }
  1051                           ;lcd_hd44780_pic16.c: 331: while(val)
  1052                           
  1053  077F  0820               	movf	LCDWriteInt@val,w
  1054  0780  0421               	iorwf	LCDWriteInt@val+1,w
  1055  0781  1903               	btfsc	3,2
  1056  0782  2FAC               	goto	l1122
  1057                           
  1058                           ;lcd_hd44780_pic16.c: 332: {
  1059                           ;lcd_hd44780_pic16.c: 333: str[i]=val%10;
  1060  0783  300A               	movlw	10
  1061  0784  00F0               	movwf	___awmod@divisor
  1062  0785  3000               	movlw	0
  1063  0786  00F1               	movwf	___awmod@divisor+1
  1064  0787  0821               	movf	LCDWriteInt@val+1,w
  1065  0788  00F3               	movwf	___awmod@dividend+1
  1066  0789  0820               	movf	LCDWriteInt@val,w
  1067  078A  00F2               	movwf	___awmod@dividend
  1068  078B  3186  261E  3187   	fcall	___awmod
  1069  078E  0870               	movf	?___awmod,w
  1070  078F  00FC               	movwf	??_LCDWriteInt
  1071  0790  0020               	movlb	0	; select bank0
  1072  0791  082A               	movf	LCDWriteInt@i,w
  1073  0792  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1074  0793  0086               	movwf	6
  1075  0794  0187               	clrf	7
  1076  0795  087C               	movf	??_LCDWriteInt,w
  1077  0796  0081               	movwf	1
  1078                           
  1079                           ;lcd_hd44780_pic16.c: 334: val=val/10;
  1080  0797  300A               	movlw	10
  1081  0798  00F0               	movwf	___awdiv@divisor
  1082  0799  3000               	movlw	0
  1083  079A  00F1               	movwf	___awdiv@divisor+1
  1084  079B  0821               	movf	LCDWriteInt@val+1,w
  1085  079C  00F3               	movwf	___awdiv@dividend+1
  1086  079D  0820               	movf	LCDWriteInt@val,w
  1087  079E  00F2               	movwf	___awdiv@dividend
  1088  079F  3186  26B4  3187   	fcall	___awdiv
  1089  07A2  0871               	movf	?___awdiv+1,w
  1090  07A3  0020               	movlb	0	; select bank0
  1091  07A4  00A1               	movwf	LCDWriteInt@val+1
  1092  07A5  0870               	movf	?___awdiv,w
  1093  07A6  00A0               	movwf	LCDWriteInt@val
  1094                           
  1095                           ;lcd_hd44780_pic16.c: 335: i--;
  1096  07A7  30FF               	movlw	255
  1097  07A8  07AA               	addwf	LCDWriteInt@i,f
  1098  07A9  30FF               	movlw	255
  1099  07AA  3DAB               	addwfc	LCDWriteInt@i+1,f
  1100  07AB  2F7F               	goto	l1120
  1101  07AC                     l1122:	
  1102                           
  1103                           ;lcd_hd44780_pic16.c: 336: }
  1104                           ;lcd_hd44780_pic16.c: 337: if(field_length==-1)
  1105  07AC  0A22               	incf	LCDWriteInt@field_length,w
  1106  07AD  1903               	btfsc	3,2
  1107  07AE  2FB4               	goto	l1128
  1108  07AF  2FBC               	goto	l1130
  1109  07B0                     l1126:	
  1110                           ;lcd_hd44780_pic16.c: 338: while(str[j]==0) j++;
  1111                           
  1112  07B0  3001               	movlw	1
  1113  07B1  07A8               	addwf	LCDWriteInt@j,f
  1114  07B2  3000               	movlw	0
  1115  07B3  3DA9               	addwfc	LCDWriteInt@j+1,f
  1116  07B4                     l1128:	
  1117  07B4  0828               	movf	LCDWriteInt@j,w
  1118  07B5  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1119  07B6  0086               	movwf	6
  1120  07B7  0187               	clrf	7
  1121  07B8  0801               	movf	1,w
  1122  07B9  1D03               	btfss	3,2
  1123  07BA  2FCC               	goto	l1132
  1124  07BB  2FB0               	goto	l1126
  1125  07BC                     l1130:	
  1126                           
  1127                           ;lcd_hd44780_pic16.c: 339: else
  1128                           ;lcd_hd44780_pic16.c: 340: j=5-field_length;
  1129  07BC  0822               	movf	LCDWriteInt@field_length,w
  1130  07BD  00FC               	movwf	??_LCDWriteInt
  1131  07BE  01FD               	clrf	??_LCDWriteInt+1
  1132  07BF  1BFC               	btfsc	??_LCDWriteInt,7
  1133  07C0  03FD               	decf	??_LCDWriteInt+1,f
  1134  07C1  09FC               	comf	??_LCDWriteInt,f
  1135  07C2  09FD               	comf	??_LCDWriteInt+1,f
  1136  07C3  0AFC               	incf	??_LCDWriteInt,f
  1137  07C4  1903               	skipnz
  1138  07C5  0AFD               	incf	??_LCDWriteInt+1,f
  1139  07C6  087C               	movf	??_LCDWriteInt,w
  1140  07C7  3E05               	addlw	5
  1141  07C8  00A8               	movwf	LCDWriteInt@j
  1142  07C9  3000               	movlw	0
  1143  07CA  3D7D               	addwfc	??_LCDWriteInt+1,w
  1144  07CB  00A9               	movwf	LCDWriteInt@j+1
  1145  07CC                     l1132:	
  1146                           
  1147                           ;lcd_hd44780_pic16.c: 343: for(i=j;i<5;i++)
  1148  07CC  0829               	movf	LCDWriteInt@j+1,w
  1149  07CD  00AB               	movwf	LCDWriteInt@i+1
  1150  07CE  0828               	movf	LCDWriteInt@j,w
  1151  07CF  00AA               	movwf	LCDWriteInt@i
  1152  07D0                     L2:	
  1153  07D0  082B               	movf	LCDWriteInt@i+1,w
  1154  07D1  3A80               	xorlw	128
  1155  07D2  00FC               	movwf	??_LCDWriteInt
  1156  07D3  3080               	movlw	128
  1157  07D4  027C               	subwf	??_LCDWriteInt,w
  1158  07D5  1D03               	skipz
  1159  07D6  2FD9               	goto	u725
  1160  07D7  3005               	movlw	5
  1161  07D8  022A               	subwf	LCDWriteInt@i,w
  1162  07D9                     u725:	
  1163  07D9  1803               	btfsc	3,0
  1164  07DA  0008               	return
  1165                           
  1166                           ;lcd_hd44780_pic16.c: 344: {
  1167                           ;lcd_hd44780_pic16.c: 345: (LCDByte(48+str[i],1));
  1168  07DB  01F5               	clrf	LCDByte@isdata
  1169  07DC  0AF5               	incf	LCDByte@isdata,f
  1170  07DD  0020               	movlb	0	; select bank0
  1171  07DE  082A               	movf	LCDWriteInt@i,w
  1172  07DF  3E23               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1173  07E0  0086               	movwf	6
  1174  07E1  0187               	clrf	7
  1175  07E2  0801               	movf	1,w
  1176  07E3  3E30               	addlw	48
  1177  07E4  3185  25D9  3187   	fcall	_LCDByte
  1178  07E7  3001               	movlw	1
  1179  07E8  0020               	movlb	0	; select bank0
  1180  07E9  07AA               	addwf	LCDWriteInt@i,f
  1181  07EA  3000               	movlw	0
  1182  07EB  3DAB               	addwfc	LCDWriteInt@i+1,f
  1183  07EC  2FD0               	goto	L2
  1184  07ED                     __end_of_LCDWriteInt:	
  1185                           
  1186                           	psect	text3
  1187  061E                     __ptext3:	
  1188 ;; *************** function ___awmod *****************
  1189 ;; Defined at:
  1190 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  divisor         2    0[COMMON] int 
  1193 ;;  dividend        2    2[COMMON] int 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  sign            1    6[COMMON] unsigned char 
  1196 ;;  counter         1    5[COMMON] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2    0[COMMON] int 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1206 ;;      Params:         4       0       0       0       0       0       0       0
  1207 ;;      Locals:         2       0       0       0       0       0       0       0
  1208 ;;      Temps:          1       0       0       0       0       0       0       0
  1209 ;;      Totals:         7       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        7 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_LCDWriteInt
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function ___awmod
  1221  061E                     ___awmod:	
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1225  061E  01F6               	clrf	___awmod@sign
  1226  061F  1FF3               	btfss	___awmod@dividend+1,7
  1227  0620  2E28               	goto	l998
  1228  0621  09F2               	comf	___awmod@dividend,f
  1229  0622  09F3               	comf	___awmod@dividend+1,f
  1230  0623  0AF2               	incf	___awmod@dividend,f
  1231  0624  1903               	skipnz
  1232  0625  0AF3               	incf	___awmod@dividend+1,f
  1233  0626  01F6               	clrf	___awmod@sign
  1234  0627  0AF6               	incf	___awmod@sign,f
  1235  0628                     l998:	
  1236  0628  1FF1               	btfss	___awmod@divisor+1,7
  1237  0629  2E2F               	goto	l1002
  1238  062A  09F0               	comf	___awmod@divisor,f
  1239  062B  09F1               	comf	___awmod@divisor+1,f
  1240  062C  0AF0               	incf	___awmod@divisor,f
  1241  062D  1903               	skipnz
  1242  062E  0AF1               	incf	___awmod@divisor+1,f
  1243  062F                     l1002:	
  1244  062F  0870               	movf	___awmod@divisor,w
  1245  0630  0471               	iorwf	___awmod@divisor+1,w
  1246  0631  1903               	btfsc	3,2
  1247  0632  2E56               	goto	l1020
  1248  0633  01F5               	clrf	___awmod@counter
  1249  0634  0AF5               	incf	___awmod@counter,f
  1250  0635                     l1010:	
  1251  0635  1BF1               	btfsc	___awmod@divisor+1,7
  1252  0636  2E41               	goto	l1012
  1253  0637  3001               	movlw	1
  1254  0638                     u555:	
  1255  0638  35F0               	lslf	___awmod@divisor,f
  1256  0639  0DF1               	rlf	___awmod@divisor+1,f
  1257  063A  0B89               	decfsz	9,f
  1258  063B  2E38               	goto	u555
  1259  063C  3001               	movlw	1
  1260  063D  00F4               	movwf	??___awmod
  1261  063E  0874               	movf	??___awmod,w
  1262  063F  07F5               	addwf	___awmod@counter,f
  1263  0640  2E35               	goto	l1010
  1264  0641                     l1012:	
  1265  0641  0871               	movf	___awmod@divisor+1,w
  1266  0642  0273               	subwf	___awmod@dividend+1,w
  1267  0643  1D03               	skipz
  1268  0644  2E47               	goto	u575
  1269  0645  0870               	movf	___awmod@divisor,w
  1270  0646  0272               	subwf	___awmod@dividend,w
  1271  0647                     u575:	
  1272  0647  1C03               	skipc
  1273  0648  2E4D               	goto	l1016
  1274  0649  0870               	movf	___awmod@divisor,w
  1275  064A  02F2               	subwf	___awmod@dividend,f
  1276  064B  0871               	movf	___awmod@divisor+1,w
  1277  064C  3BF3               	subwfb	___awmod@dividend+1,f
  1278  064D                     l1016:	
  1279  064D  3001               	movlw	1
  1280  064E                     u585:	
  1281  064E  36F1               	lsrf	___awmod@divisor+1,f
  1282  064F  0CF0               	rrf	___awmod@divisor,f
  1283  0650  0B89               	decfsz	9,f
  1284  0651  2E4E               	goto	u585
  1285  0652  3001               	movlw	1
  1286  0653  02F5               	subwf	___awmod@counter,f
  1287  0654  1D03               	btfss	3,2
  1288  0655  2E41               	goto	l1012
  1289  0656                     l1020:	
  1290  0656  0876               	movf	___awmod@sign,w
  1291  0657  1903               	btfsc	3,2
  1292  0658  2E5E               	goto	l1024
  1293  0659  09F2               	comf	___awmod@dividend,f
  1294  065A  09F3               	comf	___awmod@dividend+1,f
  1295  065B  0AF2               	incf	___awmod@dividend,f
  1296  065C  1903               	skipnz
  1297  065D  0AF3               	incf	___awmod@dividend+1,f
  1298  065E                     l1024:	
  1299  065E  0873               	movf	___awmod@dividend+1,w
  1300  065F  00F1               	movwf	?___awmod+1
  1301  0660  0872               	movf	___awmod@dividend,w
  1302  0661  00F0               	movwf	?___awmod
  1303  0662  0008               	return
  1304  0663                     __end_of___awmod:	
  1305                           
  1306                           	psect	text4
  1307  06B4                     __ptext4:	
  1308 ;; *************** function ___awdiv *****************
  1309 ;; Defined at:
  1310 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  divisor         2    0[COMMON] int 
  1313 ;;  dividend        2    2[COMMON] int 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  quotient        2    7[COMMON] int 
  1316 ;;  sign            1    6[COMMON] unsigned char 
  1317 ;;  counter         1    5[COMMON] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    0[COMMON] int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1327 ;;      Params:         4       0       0       0       0       0       0       0
  1328 ;;      Locals:         4       0       0       0       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0       0       0       0
  1330 ;;      Totals:         9       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        9 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_LCDWriteInt
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function ___awdiv
  1342  06B4                     ___awdiv:	
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1346  06B4  01F6               	clrf	___awdiv@sign
  1347  06B5  1FF1               	btfss	___awdiv@divisor+1,7
  1348  06B6  2EBE               	goto	l954
  1349  06B7  09F0               	comf	___awdiv@divisor,f
  1350  06B8  09F1               	comf	___awdiv@divisor+1,f
  1351  06B9  0AF0               	incf	___awdiv@divisor,f
  1352  06BA  1903               	skipnz
  1353  06BB  0AF1               	incf	___awdiv@divisor+1,f
  1354  06BC  01F6               	clrf	___awdiv@sign
  1355  06BD  0AF6               	incf	___awdiv@sign,f
  1356  06BE                     l954:	
  1357  06BE  1FF3               	btfss	___awdiv@dividend+1,7
  1358  06BF  2EC9               	goto	l960
  1359  06C0  09F2               	comf	___awdiv@dividend,f
  1360  06C1  09F3               	comf	___awdiv@dividend+1,f
  1361  06C2  0AF2               	incf	___awdiv@dividend,f
  1362  06C3  1903               	skipnz
  1363  06C4  0AF3               	incf	___awdiv@dividend+1,f
  1364  06C5  3001               	movlw	1
  1365  06C6  00F4               	movwf	??___awdiv
  1366  06C7  0874               	movf	??___awdiv,w
  1367  06C8  06F6               	xorwf	___awdiv@sign,f
  1368  06C9                     l960:	
  1369  06C9  01F7               	clrf	___awdiv@quotient
  1370  06CA  01F8               	clrf	___awdiv@quotient+1
  1371  06CB  0870               	movf	___awdiv@divisor,w
  1372  06CC  0471               	iorwf	___awdiv@divisor+1,w
  1373  06CD  1903               	btfsc	3,2
  1374  06CE  2EF8               	goto	l982
  1375  06CF  01F5               	clrf	___awdiv@counter
  1376  06D0  0AF5               	incf	___awdiv@counter,f
  1377  06D1                     l970:	
  1378  06D1  1BF1               	btfsc	___awdiv@divisor+1,7
  1379  06D2  2EDD               	goto	l972
  1380  06D3  3001               	movlw	1
  1381  06D4                     u455:	
  1382  06D4  35F0               	lslf	___awdiv@divisor,f
  1383  06D5  0DF1               	rlf	___awdiv@divisor+1,f
  1384  06D6  0B89               	decfsz	9,f
  1385  06D7  2ED4               	goto	u455
  1386  06D8  3001               	movlw	1
  1387  06D9  00F4               	movwf	??___awdiv
  1388  06DA  0874               	movf	??___awdiv,w
  1389  06DB  07F5               	addwf	___awdiv@counter,f
  1390  06DC  2ED1               	goto	l970
  1391  06DD                     l972:	
  1392  06DD  3001               	movlw	1
  1393  06DE                     u475:	
  1394  06DE  35F7               	lslf	___awdiv@quotient,f
  1395  06DF  0DF8               	rlf	___awdiv@quotient+1,f
  1396  06E0  0B89               	decfsz	9,f
  1397  06E1  2EDE               	goto	u475
  1398  06E2  0871               	movf	___awdiv@divisor+1,w
  1399  06E3  0273               	subwf	___awdiv@dividend+1,w
  1400  06E4  1D03               	skipz
  1401  06E5  2EE8               	goto	u485
  1402  06E6  0870               	movf	___awdiv@divisor,w
  1403  06E7  0272               	subwf	___awdiv@dividend,w
  1404  06E8                     u485:	
  1405  06E8  1C03               	skipc
  1406  06E9  2EEF               	goto	l978
  1407  06EA  0870               	movf	___awdiv@divisor,w
  1408  06EB  02F2               	subwf	___awdiv@dividend,f
  1409  06EC  0871               	movf	___awdiv@divisor+1,w
  1410  06ED  3BF3               	subwfb	___awdiv@dividend+1,f
  1411  06EE  1477               	bsf	___awdiv@quotient,0
  1412  06EF                     l978:	
  1413  06EF  3001               	movlw	1
  1414  06F0                     u495:	
  1415  06F0  36F1               	lsrf	___awdiv@divisor+1,f
  1416  06F1  0CF0               	rrf	___awdiv@divisor,f
  1417  06F2  0B89               	decfsz	9,f
  1418  06F3  2EF0               	goto	u495
  1419  06F4  3001               	movlw	1
  1420  06F5  02F5               	subwf	___awdiv@counter,f
  1421  06F6  1D03               	btfss	3,2
  1422  06F7  2EDD               	goto	l972
  1423  06F8                     l982:	
  1424  06F8  0876               	movf	___awdiv@sign,w
  1425  06F9  1903               	btfsc	3,2
  1426  06FA  2F00               	goto	l986
  1427  06FB  09F7               	comf	___awdiv@quotient,f
  1428  06FC  09F8               	comf	___awdiv@quotient+1,f
  1429  06FD  0AF7               	incf	___awdiv@quotient,f
  1430  06FE  1903               	skipnz
  1431  06FF  0AF8               	incf	___awdiv@quotient+1,f
  1432  0700                     l986:	
  1433  0700  0878               	movf	___awdiv@quotient+1,w
  1434  0701  00F1               	movwf	?___awdiv+1
  1435  0702  0877               	movf	___awdiv@quotient,w
  1436  0703  00F0               	movwf	?___awdiv
  1437  0704  0008               	return
  1438  0705                     __end_of___awdiv:	
  1439                           
  1440                           	psect	text5
  1441  0705                     __ptext5:	
  1442 ;; *************** function _LCDInit *****************
  1443 ;; Defined at:
  1444 ;;		line 194 in file "lcd_hd44780_pic16.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  style           1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  style           1    0[BANK0 ] unsigned char 
  1449 ;;  __i             1    1[BANK0 ] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1459 ;;      Params:         0       0       0       0       0       0       0       0
  1460 ;;      Locals:         0       2       0       0       0       0       0       0
  1461 ;;      Temps:          2       0       0       0       0       0       0       0
  1462 ;;      Totals:         2       2       0       0       0       0       0       0
  1463 ;;Total ram usage:        4 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		_LCDBusyLoop
  1468 ;;		_LCDByte
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _LCDInit
  1476  0705                     _LCDInit:	
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1480                           ;LCDInit@style stored from wreg
  1481  0705  0020               	movlb	0	; select bank0
  1482  0706  00A0               	movwf	LCDInit@style
  1483                           
  1484                           ;lcd_hd44780_pic16.c: 210: _delay((unsigned long)((30)*(32000000/4000.0)));
  1485  0707  3002               	movlw	2
  1486  0708  00FD               	movwf	??_LCDInit+1
  1487  0709  3038               	movlw	56
  1488  070A  00FC               	movwf	??_LCDInit
  1489  070B  30AD               	movlw	173
  1490  070C                     u767:	
  1491  070C  0B89               	decfsz	9,f
  1492  070D  2F0C               	goto	u767
  1493  070E  0BFC               	decfsz	??_LCDInit,f
  1494  070F  2F0C               	goto	u767
  1495  0710  0BFD               	decfsz	??_LCDInit+1,f
  1496  0711  2F0C               	goto	u767
  1497  0712  0000               	nop
  1498                           
  1499                           ;lcd_hd44780_pic16.c: 213: TRISC&=(~(0x0F<<0));
  1500  0713  30F0               	movlw	240
  1501  0714  00FC               	movwf	??_LCDInit
  1502  0715  087C               	movf	??_LCDInit,w
  1503  0716  0021               	movlb	1	; select bank1
  1504  0717  058E               	andwf	14,f	;volatile
  1505                           
  1506                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC6=0;
  1507  0718  130E               	bcf	14,6	;volatile
  1508                           
  1509                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC4=0;
  1510  0719  120E               	bcf	14,4	;volatile
  1511                           
  1512                           ;lcd_hd44780_pic16.c: 217: TRISCbits.TRISC5=0;
  1513  071A  128E               	bcf	14,5	;volatile
  1514                           
  1515                           ;lcd_hd44780_pic16.c: 219: PORTC&=(~(0x0F<<0));
  1516  071B  30F0               	movlw	240
  1517  071C  00FC               	movwf	??_LCDInit
  1518  071D  087C               	movf	??_LCDInit,w
  1519  071E  0020               	movlb	0	; select bank0
  1520  071F  058E               	andwf	14,f	;volatile
  1521                           
  1522                           ;lcd_hd44780_pic16.c: 221: (RC6=0);
  1523  0720  130E               	bcf	14,6	;volatile
  1524                           
  1525                           ;lcd_hd44780_pic16.c: 222: (RC5=0);
  1526  0721  128E               	bcf	14,5	;volatile
  1527                           
  1528                           ;lcd_hd44780_pic16.c: 223: (RC4=0);
  1529  0722  120E               	bcf	14,4	;volatile
  1530                           
  1531                           ;lcd_hd44780_pic16.c: 226: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1532  0723  3200               	nop2	;2 cycle nop
  1533  0724  3200               	nop2	;2 cycle nop
  1534                           
  1535                           ;lcd_hd44780_pic16.c: 228: (RC6=1);
  1536  0725  0020               	movlb	0	; select bank0
  1537  0726  170E               	bsf	14,6	;volatile
  1538                           
  1539                           ;lcd_hd44780_pic16.c: 229: PORTC|=((0b00000010)<<0);
  1540  0727  148E               	bsf	14,1	;volatile
  1541                           
  1542                           ;lcd_hd44780_pic16.c: 230: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1543  0728  3200               	nop2	;2 cycle nop
  1544  0729  3200               	nop2	;2 cycle nop
  1545  072A  3200               	nop2	;2 cycle nop
  1546  072B  3200               	nop2	;2 cycle nop
  1547                           
  1548                           ;lcd_hd44780_pic16.c: 231: (RC6=0);
  1549  072C  0020               	movlb	0	; select bank0
  1550  072D  130E               	bcf	14,6	;volatile
  1551                           
  1552                           ;lcd_hd44780_pic16.c: 232: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1553  072E  3200               	nop2	;2 cycle nop
  1554  072F  3200               	nop2	;2 cycle nop
  1555  0730  3200               	nop2	;2 cycle nop
  1556  0731  3200               	nop2	;2 cycle nop
  1557                           
  1558                           ;lcd_hd44780_pic16.c: 235: LCDBusyLoop();
  1559  0732  3186  2663  3187   	fcall	_LCDBusyLoop
  1560                           
  1561                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00101000,0));
  1562  0735  01F5               	clrf	LCDByte@isdata
  1563  0736  3028               	movlw	40
  1564  0737  3185  25D9  3187   	fcall	_LCDByte
  1565                           
  1566                           ;lcd_hd44780_pic16.c: 241: (LCDByte(0b00001100|style,0));
  1567  073A  01F5               	clrf	LCDByte@isdata
  1568  073B  0020               	movlb	0	; select bank0
  1569  073C  0820               	movf	LCDInit@style,w
  1570  073D  380C               	iorlw	12
  1571  073E  3185  25D9  3187   	fcall	_LCDByte
  1572                           
  1573                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b01000000,0));
  1574  0741  01F5               	clrf	LCDByte@isdata
  1575  0742  3040               	movlw	64
  1576  0743  3185  25D9  3187   	fcall	_LCDByte
  1577                           
  1578                           ;lcd_hd44780_pic16.c: 246: uint8_t __i;
  1579                           ;lcd_hd44780_pic16.c: 247: for(__i=0;__i<sizeof(__cgram);__i++)
  1580  0746  0020               	movlb	0	; select bank0
  1581  0747  01A1               	clrf	LCDInit@__i
  1582  0748                     L3:	
  1583  0748  3040               	movlw	64
  1584  0749  0221               	subwf	LCDInit@__i,w
  1585  074A  1803               	btfsc	3,0
  1586  074B  0008               	return
  1587                           
  1588                           ;lcd_hd44780_pic16.c: 248: (LCDByte(__cgram[__i],1));
  1589  074C  01F5               	clrf	LCDByte@isdata
  1590  074D  0AF5               	incf	LCDByte@isdata,f
  1591  074E  0821               	movf	LCDInit@__i,w
  1592  074F  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  1593  0750  0086               	movwf	6
  1594  0751  0187               	clrf	7
  1595  0752  0801               	movf	1,w
  1596  0753  3185  25D9  3187   	fcall	_LCDByte
  1597  0756  3001               	movlw	1
  1598  0757  00FC               	movwf	??_LCDInit
  1599  0758  087C               	movf	??_LCDInit,w
  1600  0759  0020               	movlb	0	; select bank0
  1601  075A  07A1               	addwf	LCDInit@__i,f
  1602  075B  2F48               	goto	L3
  1603  075C                     __end_of_LCDInit:	
  1604                           
  1605                           	psect	text6
  1606  05D9                     __ptext6:	
  1607 ;; *************** function _LCDByte *****************
  1608 ;; Defined at:
  1609 ;;		line 81 in file "lcd_hd44780_pic16.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  c               1    wreg     unsigned char 
  1612 ;;  isdata          1    5[COMMON] unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  c               1   10[COMMON] unsigned char 
  1615 ;;  temp            1   11[COMMON] unsigned char 
  1616 ;;  ln              1    9[COMMON] unsigned char 
  1617 ;;  hn              1    8[COMMON] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1627 ;;      Params:         1       0       0       0       0       0       0       0
  1628 ;;      Locals:         4       0       0       0       0       0       0       0
  1629 ;;      Temps:          2       0       0       0       0       0       0       0
  1630 ;;      Totals:         7       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        7 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    1
  1634 ;; This function calls:
  1635 ;;		_LCDBusyLoop
  1636 ;; This function is called by:
  1637 ;;		_LCDInit
  1638 ;;		_LCDWriteString
  1639 ;;		_LCDWriteInt
  1640 ;;		_main
  1641 ;;		_LCDGotoXY
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _LCDByte
  1647  05D9                     _LCDByte:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  1651                           ;LCDByte@c stored from wreg
  1652  05D9  00FA               	movwf	LCDByte@c
  1653                           
  1654                           ;lcd_hd44780_pic16.c: 90: uint8_t hn,ln;
  1655                           ;lcd_hd44780_pic16.c: 91: uint8_t temp;
  1656                           ;lcd_hd44780_pic16.c: 93: hn=c>>4;
  1657  05DA  087A               	movf	LCDByte@c,w
  1658  05DB  00F6               	movwf	??_LCDByte
  1659  05DC  3004               	movlw	4
  1660  05DD                     u405:	
  1661  05DD  36F6               	lsrf	??_LCDByte,f
  1662  05DE  0B89               	decfsz	9,f
  1663  05DF  2DDD               	goto	u405
  1664  05E0  0876               	movf	??_LCDByte,w
  1665  05E1  00F7               	movwf	??_LCDByte+1
  1666  05E2  0877               	movf	??_LCDByte+1,w
  1667  05E3  00F8               	movwf	LCDByte@hn
  1668                           
  1669                           ;lcd_hd44780_pic16.c: 94: ln=(c & 0x0F);
  1670  05E4  087A               	movf	LCDByte@c,w
  1671  05E5  390F               	andlw	15
  1672  05E6  00F6               	movwf	??_LCDByte
  1673  05E7  0876               	movf	??_LCDByte,w
  1674  05E8  00F9               	movwf	LCDByte@ln
  1675                           
  1676                           ;lcd_hd44780_pic16.c: 96: if(isdata==0)
  1677  05E9  0875               	movf	LCDByte@isdata,w
  1678  05EA  1D03               	btfss	3,2
  1679  05EB  2DEF               	goto	l21
  1680                           
  1681                           ;lcd_hd44780_pic16.c: 97: (RC4=0);
  1682  05EC  0020               	movlb	0	; select bank0
  1683  05ED  120E               	bcf	14,4	;volatile
  1684  05EE  2DF1               	goto	l22
  1685  05EF                     l21:	
  1686                           
  1687                           ;lcd_hd44780_pic16.c: 98: else
  1688                           ;lcd_hd44780_pic16.c: 99: (RC4=1);
  1689  05EF  0020               	movlb	0	; select bank0
  1690  05F0  160E               	bsf	14,4	;volatile
  1691  05F1                     l22:	
  1692                           
  1693                           ;lcd_hd44780_pic16.c: 101: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1694  05F1  3200               	nop2	;2 cycle nop
  1695  05F2  3200               	nop2	;2 cycle nop
  1696                           
  1697                           ;lcd_hd44780_pic16.c: 103: (RC6=1);
  1698  05F3  0020               	movlb	0	; select bank0
  1699  05F4  170E               	bsf	14,6	;volatile
  1700                           
  1701                           ;lcd_hd44780_pic16.c: 107: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  1702  05F5  080E               	movf	14,w	;volatile
  1703  05F6  39F0               	andlw	240
  1704  05F7  0478               	iorwf	LCDByte@hn,w
  1705  05F8  00F6               	movwf	??_LCDByte
  1706  05F9  0876               	movf	??_LCDByte,w
  1707  05FA  00FB               	movwf	LCDByte@temp
  1708                           
  1709                           ;lcd_hd44780_pic16.c: 108: PORTC=temp;
  1710  05FB  087B               	movf	LCDByte@temp,w
  1711  05FC  008E               	movwf	14	;volatile
  1712                           
  1713                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1714  05FD  3200               	nop2	;2 cycle nop
  1715  05FE  3200               	nop2	;2 cycle nop
  1716  05FF  3200               	nop2	;2 cycle nop
  1717  0600  3200               	nop2	;2 cycle nop
  1718                           
  1719                           ;lcd_hd44780_pic16.c: 114: (RC6=0);
  1720  0601  0020               	movlb	0	; select bank0
  1721  0602  130E               	bcf	14,6	;volatile
  1722                           
  1723                           ;lcd_hd44780_pic16.c: 116: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1724  0603  3200               	nop2	;2 cycle nop
  1725  0604  3200               	nop2	;2 cycle nop
  1726  0605  3200               	nop2	;2 cycle nop
  1727  0606  3200               	nop2	;2 cycle nop
  1728                           
  1729                           ;lcd_hd44780_pic16.c: 119: (RC6=1);
  1730  0607  0020               	movlb	0	; select bank0
  1731  0608  170E               	bsf	14,6	;volatile
  1732                           
  1733                           ;lcd_hd44780_pic16.c: 121: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  1734  0609  080E               	movf	14,w	;volatile
  1735  060A  39F0               	andlw	240
  1736  060B  0479               	iorwf	LCDByte@ln,w
  1737  060C  00F6               	movwf	??_LCDByte
  1738  060D  0876               	movf	??_LCDByte,w
  1739  060E  00FB               	movwf	LCDByte@temp
  1740                           
  1741                           ;lcd_hd44780_pic16.c: 123: PORTC=temp;
  1742  060F  087B               	movf	LCDByte@temp,w
  1743  0610  008E               	movwf	14	;volatile
  1744                           
  1745                           ;lcd_hd44780_pic16.c: 125: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1746  0611  3200               	nop2	;2 cycle nop
  1747  0612  3200               	nop2	;2 cycle nop
  1748  0613  3200               	nop2	;2 cycle nop
  1749  0614  3200               	nop2	;2 cycle nop
  1750                           
  1751                           ;lcd_hd44780_pic16.c: 129: (RC6=0);
  1752  0615  0020               	movlb	0	; select bank0
  1753  0616  130E               	bcf	14,6	;volatile
  1754                           
  1755                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1756  0617  3200               	nop2	;2 cycle nop
  1757  0618  3200               	nop2	;2 cycle nop
  1758  0619  3200               	nop2	;2 cycle nop
  1759  061A  3200               	nop2	;2 cycle nop
  1760                           
  1761                           ;lcd_hd44780_pic16.c: 133: LCDBusyLoop();
  1762  061B  3186  2663         	fcall	_LCDBusyLoop
  1763  061D  0008               	return
  1764  061E                     __end_of_LCDByte:	
  1765                           
  1766                           	psect	text7
  1767  0663                     __ptext7:	
  1768 ;; *************** function _LCDBusyLoop *****************
  1769 ;; Defined at:
  1770 ;;		line 136 in file "lcd_hd44780_pic16.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  status          1    4[COMMON] unsigned char 
  1775 ;;  temp            1    3[COMMON] unsigned char 
  1776 ;;  busy            1    2[COMMON] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1786 ;;      Params:         0       0       0       0       0       0       0       0
  1787 ;;      Locals:         3       0       0       0       0       0       0       0
  1788 ;;      Temps:          2       0       0       0       0       0       0       0
  1789 ;;      Totals:         5       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        5 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_LCDByte
  1796 ;;		_LCDInit
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _LCDBusyLoop
  1802  0663                     _LCDBusyLoop:	
  1803                           
  1804                           ;lcd_hd44780_pic16.c: 140: uint8_t busy,status=0x00,temp;
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  1808  0663  01F4               	clrf	LCDBusyLoop@status
  1809                           
  1810                           ;lcd_hd44780_pic16.c: 143: TRISC|=(0x0f<<0);
  1811  0664  300F               	movlw	15
  1812  0665  00F0               	movwf	??_LCDBusyLoop
  1813  0666  0870               	movf	??_LCDBusyLoop,w
  1814  0667  0021               	movlb	1	; select bank1
  1815  0668  048E               	iorwf	14,f	;volatile
  1816                           
  1817                           ;lcd_hd44780_pic16.c: 146: (RC5=1);
  1818  0669  0020               	movlb	0	; select bank0
  1819  066A  168E               	bsf	14,5	;volatile
  1820                           
  1821                           ;lcd_hd44780_pic16.c: 147: (RC4=0);
  1822  066B  120E               	bcf	14,4	;volatile
  1823                           
  1824                           ;lcd_hd44780_pic16.c: 151: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1825  066C  3200               	nop2	;2 cycle nop
  1826  066D  3200               	nop2	;2 cycle nop
  1827  066E                     l880:	
  1828                           ;lcd_hd44780_pic16.c: 154: do
  1829                           
  1830                           
  1831                           ;lcd_hd44780_pic16.c: 155: {
  1832                           ;lcd_hd44780_pic16.c: 157: (RC6=1);
  1833  066E  0020               	movlb	0	; select bank0
  1834  066F  170E               	bsf	14,6	;volatile
  1835                           
  1836                           ;lcd_hd44780_pic16.c: 160: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1837  0670  3200               	nop2	;2 cycle nop
  1838  0671  3200               	nop2	;2 cycle nop
  1839                           
  1840                           ;lcd_hd44780_pic16.c: 162: status=(PORTC>>0);
  1841  0672  0020               	movlb	0	; select bank0
  1842  0673  080E               	movf	14,w	;volatile
  1843  0674  00F0               	movwf	??_LCDBusyLoop
  1844  0675  0870               	movf	??_LCDBusyLoop,w
  1845  0676  00F4               	movwf	LCDBusyLoop@status
  1846                           
  1847                           ;lcd_hd44780_pic16.c: 163: status=status<<4;
  1848  0677  0874               	movf	LCDBusyLoop@status,w
  1849  0678  00F0               	movwf	??_LCDBusyLoop
  1850  0679  3003               	movlw	3
  1851  067A                     u385:	
  1852  067A  35F0               	lslf	??_LCDBusyLoop,f
  1853  067B  3EFF               	addlw	-1
  1854  067C  1D03               	skipz
  1855  067D  2E7A               	goto	u385
  1856  067E  3570               	lslf	??_LCDBusyLoop,w
  1857  067F  00F1               	movwf	??_LCDBusyLoop+1
  1858  0680  0871               	movf	??_LCDBusyLoop+1,w
  1859  0681  00F4               	movwf	LCDBusyLoop@status
  1860                           
  1861                           ;lcd_hd44780_pic16.c: 165: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1862  0682  3200               	nop2	;2 cycle nop
  1863  0683  3200               	nop2	;2 cycle nop
  1864                           
  1865                           ;lcd_hd44780_pic16.c: 168: (RC6=0);
  1866  0684  0020               	movlb	0	; select bank0
  1867  0685  130E               	bcf	14,6	;volatile
  1868                           
  1869                           ;lcd_hd44780_pic16.c: 169: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1870  0686  3200               	nop2	;2 cycle nop
  1871  0687  3200               	nop2	;2 cycle nop
  1872  0688  3200               	nop2	;2 cycle nop
  1873  0689  3200               	nop2	;2 cycle nop
  1874                           
  1875                           ;lcd_hd44780_pic16.c: 171: (RC6=1);
  1876  068A  0020               	movlb	0	; select bank0
  1877  068B  170E               	bsf	14,6	;volatile
  1878                           
  1879                           ;lcd_hd44780_pic16.c: 172: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1880  068C  3200               	nop2	;2 cycle nop
  1881  068D  3200               	nop2	;2 cycle nop
  1882                           
  1883                           ;lcd_hd44780_pic16.c: 174: temp=(PORTC>>0);
  1884  068E  0020               	movlb	0	; select bank0
  1885  068F  080E               	movf	14,w	;volatile
  1886  0690  00F0               	movwf	??_LCDBusyLoop
  1887  0691  0870               	movf	??_LCDBusyLoop,w
  1888  0692  00F3               	movwf	LCDBusyLoop@temp
  1889                           
  1890                           ;lcd_hd44780_pic16.c: 175: temp&=0x0F;
  1891  0693  300F               	movlw	15
  1892  0694  00F0               	movwf	??_LCDBusyLoop
  1893  0695  0870               	movf	??_LCDBusyLoop,w
  1894  0696  05F3               	andwf	LCDBusyLoop@temp,f
  1895                           
  1896                           ;lcd_hd44780_pic16.c: 177: status=status|temp;
  1897  0697  0874               	movf	LCDBusyLoop@status,w
  1898  0698  0473               	iorwf	LCDBusyLoop@temp,w
  1899  0699  00F0               	movwf	??_LCDBusyLoop
  1900  069A  0870               	movf	??_LCDBusyLoop,w
  1901  069B  00F4               	movwf	LCDBusyLoop@status
  1902                           
  1903                           ;lcd_hd44780_pic16.c: 179: busy=status & 0b10000000;
  1904  069C  0874               	movf	LCDBusyLoop@status,w
  1905  069D  3980               	andlw	128
  1906  069E  00F0               	movwf	??_LCDBusyLoop
  1907  069F  0870               	movf	??_LCDBusyLoop,w
  1908  06A0  00F2               	movwf	LCDBusyLoop@busy
  1909                           
  1910                           ;lcd_hd44780_pic16.c: 181: _delay((unsigned long)((0.5)*(32000000/4000000.0)));
  1911  06A1  3200               	nop2	;2 cycle nop
  1912  06A2  3200               	nop2	;2 cycle nop
  1913                           
  1914                           ;lcd_hd44780_pic16.c: 183: (RC6=0);
  1915  06A3  0020               	movlb	0	; select bank0
  1916  06A4  130E               	bcf	14,6	;volatile
  1917                           
  1918                           ;lcd_hd44780_pic16.c: 184: _delay((unsigned long)((1)*(32000000/4000000.0)));
  1919  06A5  3200               	nop2	;2 cycle nop
  1920  06A6  3200               	nop2	;2 cycle nop
  1921  06A7  3200               	nop2	;2 cycle nop
  1922  06A8  3200               	nop2	;2 cycle nop
  1923                           
  1924                           ;lcd_hd44780_pic16.c: 185: }while(busy);
  1925  06A9  0872               	movf	LCDBusyLoop@busy,w
  1926  06AA  1D03               	btfss	3,2
  1927  06AB  2E6E               	goto	l880
  1928                           
  1929                           ;lcd_hd44780_pic16.c: 187: (RC5=0);
  1930  06AC  0020               	movlb	0	; select bank0
  1931  06AD  128E               	bcf	14,5	;volatile
  1932                           
  1933                           ;lcd_hd44780_pic16.c: 190: TRISC&=(~(0x0F<<0));
  1934  06AE  30F0               	movlw	240
  1935  06AF  00F0               	movwf	??_LCDBusyLoop
  1936  06B0  0870               	movf	??_LCDBusyLoop,w
  1937  06B1  0021               	movlb	1	; select bank1
  1938  06B2  058E               	andwf	14,f	;volatile
  1939  06B3  0008               	return
  1940  06B4                     __end_of_LCDBusyLoop:	
  1941  007E                     btemp	set	126	;btemp
  1942  007E                     wtemp0	set	126


Data Sizes:
    Strings     3
    Constant    0
    Data        64
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      20
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_LCDInit
    _main->_LCDWriteInt
    _main->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5363
                                             12 BANK0      3     3      0
                            _LCDByte
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1143
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2191
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1118
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     911
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      14       6       25.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      62      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Feb 22 22:52:39 2017

           ?_LCDBusyLoop 0070              __CFG_CP$OFF 0000                       l21 05EF  
                     l22 05F1             ___awdiv@sign 0076              __CFG_LVP$ON 0000  
                    l880 066E                      l960 06C9                      l970 06D1  
                    l954 06BE                      l972 06DD                      l982 06F8  
                    l986 0700                      l978 06EF                      l998 0628  
                    _RC4 0074                      _RC5 0075                      _RC6 0076  
                    u405 05DD             __CFG_CPD$OFF 0000                      u455 06D4  
                    u385 067A                      u475 06DE                      u555 0638  
                    u485 06E8                      u725 07D9                      u670 0766  
                    u495 06F0                      u575 0647                      u585 064E  
                    u757 0592                      u767 070C             ___awmod@sign 0076  
                    wreg 0009  LCDWriteInt@field_length 0022          __end_of_LCDByte 061E  
        __end_of_LCDInit 075C             ?_LCDWriteInt 0020              LCDByte@temp 007B  
                   l1010 0635                     l1002 062F                     l1012 0641  
                   l1020 0656                     l1100 051C                     l1024 065E  
                   l1016 064D                     l1120 077F                     l1130 07BC  
                   l1122 07AC                     l1132 07CC                     l1126 07B0  
                   l1128 07B4                     l1170 056A                     l1092 0544  
                   l1096 054A                     STR_1 0800             __CFG_WRT$OFF 0000  
                   _main 0559                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002                    ?_main 0070          __end_of___awdiv 0705  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0663             LCDInit@style 0020  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    status 0003  
                  wtemp0 007E          __initialization 07ED             __end_of_main 0599  
                 ??_main 002C            LCDByte@isdata 0075                ??_LCDByte 0076  
              ??_LCDInit 007C                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESH 009C         ___awdiv@dividend 0072                   _ANSELA 018C  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000           _LCDWriteString 051C  
              ??___awdiv 0074                ??___awmod 0074     __size_of_LCDBusyLoop 0051  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
           LCDWriteInt@i 002A             LCDWriteInt@j 0028     __size_of_LCDWriteInt 0091  
__end_of__initialization 07FD   __end_of_LCDWriteString 0559                LCDByte@hn 0078  
              LCDByte@ln 0079           __pcstackCOMMON 0070             __pidataBANK1 0599  
             __pbssBANK0 002F          ?_LCDWriteString 007C               __pmaintext 0559  
                _LCDByte 05D9                  _LCDInit 0705                  ___cgram 00A0  
                ___awdiv 06B4                  ___awmod 061E                  __ptext1 051C  
                __ptext2 075C                  __ptext3 061E                  __ptext4 06B4  
                __ptext5 0705                  __ptext6 05D9                  __ptext7 0663  
       ___awmod@dividend 0072     end_of_initialization 07FD                  init_ram 0516  
                initloop 0517             __pstringtext 0800        LCDWriteString@msg 007C  
       __CFG_FOSC$INTOSC 0000                _TRISCbits 008E               LCDInit@__i 0021  
          ??_LCDBusyLoop 0070      start_initialization 07ED            ??_LCDWriteInt 007C  
       ??_LCDWriteString 0020              __pdataBANK1 00A0      __end_of_LCDBusyLoop 06B4  
               ?_LCDByte 0075                 ?_LCDInit 0070                 LCDByte@c 007A  
              ___latbits 0002            __pcstackBANK0 0020         LCDWriteInt@F3575 002F  
    __end_of_LCDWriteInt 07ED                 ?___awdiv 0070                 ?___awmod 0070  
        LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073              _LCDBusyLoop 0663  
       LCDWriteString@cc 0021         __size_of_LCDByte 0045         __size_of_LCDInit 0057  
            _LCDWriteInt 075C         __size_of___awdiv 0051         __size_of___awmod 0045  
      LCDBusyLoop@status 0074            __size_of_main 0040           LCDWriteInt@val 0020  
         LCDWriteInt@str 0023  __size_of_LCDWriteString 003D  
